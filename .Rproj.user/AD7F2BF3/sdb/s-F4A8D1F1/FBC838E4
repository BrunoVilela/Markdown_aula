{
    "contents" : "##\n## written by Olivier Broennimann. Departement of Ecology and Evolution (DEE). \n## 2nd of November 2010. University of Lausanne. Department of ecology and evolution, Switzerland\n##\n## DESCRIPTION\n## This script investigates ecological niche overlap from occurrence and spatial environmental data\n## \n## INSTALLATION\n## \n## Put script.R, niche.overlap.functions.R and occ.prep.functions.R in a folder with a R shortcut.\n## Use this folder as workspace by setting the path in the proprieties of the shortcut (right click)\n## In this folder also put your 2 datasets of occurences data (column names should be x,y) and\n## 2 datesets of points representing the study areas with environmental values (column names should be x,y,X1,X2,...,Xn)\n## (these datasets are usually derived from a sampling of the study areas in a GIS) \n## The main script script.R allows setting the analyses and sources the functions necessary for the calculations \n## (niche.overlap.functions.R and occ.prep.functions.R).\n##\n\n\n#################################################################################################\n############################## load functions and packages ######################################\n#################################################################################################\n\nsource(\"niche.overlap.functions.R\")\nsource(\"occ.prep.functions.R\")\n\ninstall.packages(\"BIOMOD\",repos=\"http://R-Forge.R-project.org\")\nlibrary(BIOMOD)\nlibrary(ade4)\nlibrary(adehabitat)\nlibrary(sp)\nlibrary(gam)\nlibrary(MASS)\nlibrary(mvtnorm)\nlibrary(gbm)\nlibrary(dismo)\n\n#################################################################################################\n############################## preparation of datasets ##########################################\n#################################################################################################\n\n# load climate variable for all site of the study area 1 (column names should be x,y,X1,X2,...,Xn)\nclim1<-na.exclude(read.delim(\"clim.eu.txt\",h=T,sep=\"\\t\"))\n\n# load climate variable for all site of the study area 1 (column names should be x,y,X1,X2,...,Xn)\nclim2<-na.exclude(read.delim(\"clim.na.txt\",h=T,sep=\"\\t\")) \n\n# global climate for both ranges\nclim12<-rbind(clim1,clim2)\n\n# loading occurrence sites for the species (column names should be x,y)\nocc.sp.aggr<-na.exclude(read.delim(\"CM_2009_05feb.txt\",h=T,sep=\"\\t\"))\n\n# remove occurrences closer than a minimum distance to each other (remove aggregation). Setting min.dist=0 will remove no occurrence.\n\nocc.sp<-occ.desaggragation(df=occ.sp.aggr,colxy=1:2,min.dist=0.16666,plot=F)\n\n# create sp occurrence dataset by adding climate variables from the global climate datasets\n# resolution should be the resolution of the climate data grid\n\nocc.sp1<-na.exclude(sample.sp.globvar(dfsp=occ.sp,colspxy=1:2,colspkept=NULL,dfvar=clim1,colvarxy=1:2,colvar=\"all\",resolution=0.16666))\nocc.sp2<-na.exclude(sample.sp.globvar(dfsp=occ.sp,colspxy=1:2,colspkept=NULL,dfvar=clim2,colvarxy=1:2,colvar=\"all\",resolution=0.16666))\n\n# create presence/absence datasets (used in ENFA and SDMs)\nrow.pa1<-sample.sp.globvar(dfsp=clim1,colspxy=1:2,colspkept=NULL,dfvar=occ.sp1,colvarxy=1:2,colvar=3,resolution=0) \n#find rows of clim1 where the species is present\npa<-data.frame((!is.na(row.pa1))*1);names(pa)<-\"pa\" #create 01 column\npa1<-cbind(clim1,pa)\n\nrow.pa2<-sample.sp.globvar(dfsp=clim2,colspxy=1:2,colspkept=NULL,dfvar=occ.sp2,colvarxy=1:2,colvar=3,resolution=0) \n#find rows of clim1 where the species is present\npa<-data.frame((!is.na(row.pa2))*1);names(pa)<-\"pa\" #create 01 column\npa2<-cbind(clim2,pa)\n\n#################################################################################################\n############################## ANALYSIS - selection of parameters ###############################\n#################################################################################################\n\n# selection of the type of analysis.\n# If PROJ =F, the models are calibrated on both ranges.\n# If PROJ =T, the models are calibrated on species 1 range only and projected to range 2. \n# Analyses where both ranges are needed (ex: LDA) are not done\nPROJ = F\n\n# selection of variables to include in the analyses\nnames(clim12)\nXvar<-c(3:11)\nnvar<-length(Xvar)\n\n#number of interation for the tests of equivalency and similarity\niterations<-100\n\n#resolution of the gridding of the climate space\nR=100\n\n#################################################################################################\n################### row weigthing and grouping factors for ade4 functions  ######################\n#################################################################################################\n\n# if PROJ = F\nrow.w.1.occ<-1-(nrow(occ.sp1)/nrow(rbind(occ.sp1,occ.sp2))) # prevalence of occ1\nrow.w.2.occ<-1-(nrow(occ.sp2)/nrow(rbind(occ.sp1,occ.sp2))) # prevalence of occ2\nrow.w.occ<-c(rep(0, nrow(clim1)),rep(0, nrow(clim2)),rep(row.w.1.occ, nrow(occ.sp1)),rep(row.w.2.occ, nrow(occ.sp2)))\n\nrow.w.1.env<-1-(nrow(clim1)/nrow(clim12))  # prevalence of clim1\nrow.w.2.env<-1-(nrow(clim2)/nrow(clim12))  # prevalence of clim2\nrow.w.env<-c(rep(row.w.1.env, nrow(clim1)),rep(row.w.2.env, nrow(clim2)),rep(0, nrow(occ.sp1)),rep(0, nrow(occ.sp2)))\n\nfac<-as.factor(c(rep(1, nrow(clim1)),rep(2, nrow(clim2)),rep(1, nrow(occ.sp1)),rep(2, nrow(occ.sp2))))\n\n# if PROJ = T\n\nrow.w.occ.PROJT<-c(rep(0, nrow(clim1)),rep(0, nrow(clim2)),rep(1, nrow(occ.sp1)),rep(0, nrow(occ.sp2)))\nrow.w.env.PROJT<-c(rep(1, nrow(clim1)),rep(0, nrow(clim2)),rep(0, nrow(occ.sp1)),rep(0, nrow(occ.sp2)))\n\n# global dataset for the analysis and rows for each sub dataset\ndata.env.occ<-rbind(clim1,clim2,occ.sp1,occ.sp2)[Xvar]\nrow.clim1<-1:nrow(clim1)\nrow.clim2<-(nrow(clim1)+1):(nrow(clim1)+nrow(clim2))\nrow.clim12<-1:(nrow(clim1)+nrow(clim2))\nrow.sp1<-(nrow(clim1)+nrow(clim2)+1):(nrow(clim1)+nrow(clim2)+nrow(occ.sp1))\nrow.sp2<-(nrow(clim1)+nrow(clim2)+nrow(occ.sp1)+1):(nrow(clim1)+nrow(clim2)+nrow(occ.sp1)+nrow(occ.sp2))\n\n\n#################################################################################################\n#################################### one-variable ###############################################\n#################################################################################################\n\n      # measures niche overlap along one chosen variable\n\nonevar<-5 #choose the variable to analyse here\nnameonevar<-names(clim12)[onevar]\n\n\t\t\t# predict the scores on the axes\nscores.clim12<- data.frame(clim12[,onevar]);names(scores.clim12)<-nameonevar\nscores.clim2<- data.frame(clim2[,onevar]);names(scores.clim2)<-nameonevar\nscores.clim1<- data.frame(clim1[,onevar]);names(scores.clim1)<-nameonevar\nscores.sp2<- data.frame(occ.sp2[,onevar]);names(scores.sp2)<-nameonevar\nscores.sp1<- data.frame(occ.sp1[,onevar]);names(scores.sp1)<-nameonevar\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=paste(nameonevar,\"- EU niche\"),name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=paste(nameonevar,\"- NA niche\"),name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.new()\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#################################################################################################\n#################################### PCA-occ ####################################################\n#################################################################################################\n\n      # measures niche overlap along the two first axes of a PCA calibrated on occurence data\n\t\t\t\nif(PROJ == F){\t#fit of the analyse using occurences from both ranges\n\tpca.cal <-dudi.pca(data.env.occ,row.w = row.w.occ, center = T, scale = T, scannf = F, nf = 2)\n}\nif(PROJ == T) {   #fit of the analyse using occurences from range 1\n\tpca.cal <-dudi.pca(data.env.occ,row.w = row.w.occ.PROJT, center = T, scale = T, scannf = F, nf = 2)\n}\n\t\t\t# predict the scores on the axes\nscores.clim12<- pca.cal$li[row.clim12,]\nscores.clim1<- pca.cal$li[row.clim1,]\nscores.clim2<- pca.cal$li[row.clim2,]\nscores.sp1<- pca.cal$li[row.sp1,]\nscores.sp2<- pca.cal$li[row.sp2,]\n\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=1)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"PCA - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"PCA - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(pca.cal$co,pca.cal$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#################################################################################################\n#################################### PCA-ENV ####################################################\n#################################################################################################\n\n      # measures niche overlap along the two first axes of a PCA calibrated on all the pixels of the study areas\n      \t\t\t\nif(PROJ == F){\t#fit of the analyse using occurences from both ranges\t\t\n\tpca.cal <-dudi.pca(data.env.occ,row.w = row.w.env, center = T, scale = T, scannf = F, nf = 2)\n}\nif(PROJ == T){\t#fit of the analyse using occurences from range 1\t\t\n\tpca.cal <-dudi.pca(data.env.occ,row.w = row.w.env.PROJT, center = T, scale = T, scannf = F, nf = 2)\n}\n\t\t\t# predict the scores on the axes\nscores.clim12<- pca.cal$li[row.clim12,]\nscores.clim1<- pca.cal$li[row.clim1,]\nscores.clim2<- pca.cal$li[row.clim2,]\nscores.sp1<- pca.cal$li[row.sp1,]\nscores.sp2<- pca.cal$li[row.sp2,]\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=1)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"PCA-env - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"PCA-env - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(pca.cal$co,pca.cal$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#################################################################################################\n#################################### WITHIN-GROUP ###############################################\n#################################################################################################\n\n      # measures niche overlap along the two first axes of a within analysis on occurence data with with ranges as a priori groups  \t\t\t\nif(PROJ == F){\t\n\t\t\t#fit of the analyse using occurences from both ranges\npca.cal <-dudi.pca(data.env.occ,row.w = row.w.occ, center = T, scale = T, scannf = F, nf = nvar)\nwithin.cal<-within(pca.cal, fac, scannf = F, nf = 2)\n\nscores.clim12<- within.cal$li[row.clim12,]\nscores.clim1<- within.cal$li[row.clim1,]\nscores.clim2<- within.cal$li[row.clim2,]\nscores.sp1<- within.cal$li[row.sp1,]\nscores.sp2<- within.cal$li[row.sp2,]\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=1)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"WITHIN - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"WITHIN - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(within.cal$co,within.cal$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n}\n\n#################################################################################################\n#################################### WITHIN-ENVIRONMENT #########################################\n#################################################################################################\n\n      # measures niche overlap along the two first axes of a within analysis based on all the sites of the study areas \n      # with with ranges as a priori groups\n      \nif(PROJ == F){\t\n\t\t\t#fit of the analyse using global environments from both ranges\npca.cal <-dudi.pca(data.env.occ,row.w = row.w.env, center = T, scale = T, scannf = F, nf = nvar)\nwithin.cal<-within(pca.cal, fac, scannf = F, nf = 2)\n\nscores.clim12<- within.cal$li[row.clim12,]\nscores.clim1<- within.cal$li[row.clim1,]\nscores.clim2<- within.cal$li[row.clim2,]\nscores.sp1<- within.cal$li[row.sp1,]\nscores.sp2<- within.cal$li[row.sp2,]\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=1)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"WITHIN-env - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"WITHIN-env - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(within.cal$co,within.cal$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n}\n#################################################################################################\n#################################### BETWEEN-GROUP ##############################################\n#################################################################################################\n\n      # measures niche overlap along the axis of a between analysis based on the occurence data \n      # with with ranges as a priori groups\n      \nif(PROJ == F){\t\n\t\t#fit of the analyse using global environments from both ranges\n\npca.cal <-dudi.pca(data.env.occ,row.w = row.w.occ, center = T, scale = T, scannf = F, nf = nvar)\nbetween.cal<-between(pca.cal, fac, scannf = F, nf = nvar)\n\nscores.clim12<- data.frame(between.cal$ls[row.clim12,])\nscores.clim1<- data.frame(between.cal$ls[row.clim1,])\nscores.clim2<- data.frame(between.cal$ls[row.clim2,])\nscores.sp1<- data.frame(between.cal$ls[row.sp1,])\nscores.sp2<- data.frame(between.cal$ls[row.sp2,])\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"BETWEEN - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"BETWEEN - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(between.cal$co)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n}\n#################################################################################################\n#################################### LINEAR DISCRIMINANT ########################################\n#################################################################################################\n\n      # measures niche overlap along the axis of a discriminant analysis based on the occurence data \n      # with with ranges as a priori groups\n      \nif(PROJ == F){\t\n\t\t\t#fit of the analyse using occurences from both ranges\nfac<-as.factor(c(rep(1, nrow(occ.sp1)),rep(2, nrow(occ.sp2))))\nlda.cal<-lda(rbind(occ.sp1,occ.sp2)[Xvar],fac)\n\n\t\t\t# predict the scores on the axes\nscores.clim12<- predict(lda.cal,clim12[Xvar])$x\nscores.clim2<- predict(lda.cal,clim2[Xvar])$x\nscores.clim1<- predict(lda.cal,clim1[Xvar])$x\nscores.sp2<- predict(lda.cal,occ.sp2[Xvar])$x\nscores.sp1<- predict(lda.cal,occ.sp1[Xvar])$x\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"LDA - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"LDA - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.contrib(lda.cal$scaling)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n}\n#################################################################################################\n#################################### ENFA #######################################################\n#################################################################################################\n\n      # measures niche overlap along the two first axes of an Ecological Factor Analysis\n      \nif(PROJ == F){\n  row.w.2<-1-(nrow(clim2)/nrow(rbind(clim1,clim2)))\n  row.w.1<-1-(nrow(clim1)/nrow(rbind(clim1,clim2)))    \n  row.seq<-c(rep(row.w.1,nrow(clim1)),rep(row.w.2,nrow(clim2)))\n}\n\nif(PROJ == T){  \n  row.seq<-c(rep(1,nrow(clim1)),rep(0,nrow(clim2)))\n}\n\npc<- dudi.pca(rbind(clim1,clim2)[Xvar],row.w=row.seq,scannf=F,nf=nvar)\nenfa<-enfa(pc,c(pa1$pa,pa2$pa),scannf=F,nf=nvar)\n\n            # predict the scores on the axes\nscores.clim12<- enfa$li[,1:2]\nscores.clim2<- enfa$li[(1+length(pa1$pa)):(nrow(clim2)+length(pa1$pa)),1:2]\nscores.clim1<- enfa$li[1:nrow(clim1),1:2]\nscores.sp2<- enfa$li[which(pa2$pa==1)+length(pa1),1:2]\nscores.sp1<- enfa$li[which(pa1$pa==1),1:2]\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=1)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"ENFA - EU niche\",name.axis1=\"marginality\",name.axis2=\"tolerance\")\nplot.niche(z2,title=\"ENFA - NA niche\",name.axis1=\"marginality\",name.axis2=\"tolerance\")\nplot.contrib(enfa$co,enfa$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n\n#################################################################################################\n#################################### MDS ########################################################\n#################################################################################################\n\n\n      # measures niche overlap along the two first axes of a Multi Dimensional Scaling analysis calibrated on occurence data\n      \nif(PROJ == F){\t\ndata<-rbind(occ.sp1[Xvar],occ.sp2[Xvar])\nfac<-as.factor(c(rep(1, nrow(occ.sp1)),rep(2, nrow(occ.sp2))))\nmds<-cmdscale(dist(data),ncol(data),eig = T)\n}\n\nif(PROJ == T){\t\ndata<-occ.sp1[Xvar]\nmds<-cmdscale(dist(data),ncol(data),eig = T)\n}\n\n# GAMs are used here to interpolate the relationship found in the mds model to new data because no predict function is not available!!\n\ngam1<-gam(mds$point[,1]~s(aetpet,3)+s(gdd,3)+s(p,3)+s(pet,3)+s(ppi,3)+s(stdp,3)+s(t,3)+s(tmax,3)+s(tmin,3),data=data)\ngam2<-gam(mds$point[,2]~s(aetpet,3)+s(gdd,3)+s(p,3)+s(pet,3)+s(ppi,3)+s(stdp,3)+s(t,3)+s(tmax,3)+s(tmin,3),data=data)\n\nscores.clim12<-data.frame(unlist(cbind(predict(gam1,newdata=data.frame(clim12[,Xvar]),type=\"response\"),predict(gam2,type=\"response\",newdata=data.frame(clim12[,Xvar])))))\nscores.clim1<-data.frame(unlist(cbind(predict(gam1,type=\"response\",newdata=clim1[Xvar]),predict(gam2,type=\"response\",newdata=clim1[Xvar]))))\nscores.clim2<-data.frame(unlist(cbind(predict(gam1,type=\"response\",newdata=clim2[Xvar]),predict(gam2,type=\"response\",newdata=clim2[Xvar]))))\nscores.sp1<- data.frame(unlist(cbind(predict(gam1,type=\"response\",newdata=occ.sp1[Xvar]),predict(gam2,type=\"response\",newdata=occ.sp1[Xvar]))))\nscores.sp2<- data.frame(unlist(cbind(predict(gam1,type=\"response\",newdata=occ.sp2[Xvar]),predict(gam2,type=\"response\",newdata=occ.sp2[Xvar]))))\n\n\t\t\t# calculation of occurence density and test of niche equivalency and similarity \nz1<- grid.clim(scores.clim12,scores.clim1,scores.sp1,R)\nz2<- grid.clim(scores.clim12,scores.clim2,scores.sp2,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"MDS - EU niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"MDS - NA niche\",name.axis1=\"PC1\",name.axis2=\"PC2\")\ncontrib<-t(cor(mds$points,data))[,1:2]\nplot.contrib(contrib,mds$eig)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#################################################################################################\n############ SDM (using BIOMOD for GLM,GBM and RF and using dismo for MaxEnt) ###################\n#################################################################################################\n\n      # measures niche overlap along the response gradient (probabilities) of a set of SDMs (i.e., GLM, GBM, RF and MaxEnt)\n      \nif(PROJ == F){data<-rbind(pa1,pa2)}\nif(PROJ == T){data<-pa1}\n\n# convert climate data to raster objects for MaxEnt modeling  \nxyz <- data[,c(1:3)]\nrasts <- rasterFromXYZ(xyz)\nfor(r in 4:(ncol(data)-1)){\n\txyz <- data[,c(1,2,r)]\n\tnrast <- rasterFromXYZ(xyz)\n\trasts <- stack(rasts, nrast)\n}\nrasts@layernames <- names(data)[3:(ncol(data)-1)]\n\n#BIOMOD modeling\nResponse<-data.frame(data[,ncol(data)]);names(Response)<-\"sp\"\nnbpresence<-sum(data[\"pa\"]==1)\nInitial.State(Response = Response, Explanatory = data[,Xvar])\t\nModels(GLM=T,TypeGLM =\"quad\",GBM=T,GAM=T,RF=T, \n   NbRunEval = 1, DataSplit =80, Roc=TRUE, Optimized.Threshold.Roc=TRUE, Kappa=F, TSS=F, VarImport=10,\n   NbRepPA=1, strategy=\"random\", nb.absences=nbpresence)\n\nProjection(Proj = clim12[,Xvar],Proj.name=\"clim12\",GLM=T,GBM=T,GAM=F,RF=T,ANN=F,CTA=F,MARS=F,FDA=F,SRE=F)\nload(\"proj.clim12/Proj_clim12_sp\")\nscores.clim12.GLM<-data.frame(Proj_clim12_sp[,\"GLM\",1,])/1000\nscores.clim12.GBM<-data.frame(Proj_clim12_sp[,\"GBM\",1,])/1000\nscores.clim12.RF<-data.frame(Proj_clim12_sp[,\"RF\",1,])/1000\n\nProjection(Proj = clim1[,Xvar],Proj.name=\"clim1\",GLM=T,GBM=T,GAM=F,RF=T,ANN=F,CTA=F,MARS=F,FDA=F,SRE=F)\nload(\"proj.clim1/Proj_clim1_sp\")\nscores.clim1.GLM<-data.frame(Proj_clim1_sp[1:100,\"GLM\",1,])/1000\nscores.clim1.GBM<-data.frame(Proj_clim1_sp[1:100,\"GBM\",1,])/1000\nscores.clim1.RF<-data.frame(Proj_clim1_sp[1:100,\"RF\",1,])/1000\n\nProjection(Proj = clim2[,Xvar],Proj.name=\"clim2\",GLM=T,GBM=T,GAM=F,RF=T,ANN=F,CTA=F,MARS=F,FDA=F,SRE=F)\nload(\"proj.clim2/Proj_clim2_sp\")\nscores.clim2.GLM<-data.frame(Proj_clim2_sp[1:100,\"GLM\",1,])/1000\nscores.clim2.GBM<-data.frame(Proj_clim2_sp[1:100,\"GBM\",1,])/1000\nscores.clim2.RF<-data.frame(Proj_clim2_sp[1:100,\"RF\",1,])/1000\n\nProjection(Proj = occ.sp1[,Xvar],Proj.name=\"sp1\",GLM=T,GBM=T,GAM=F,RF=T,ANN=F,CTA=F,MARS=F,FDA=F,SRE=F)\nload(\"proj.sp1/Proj_sp1_sp\")\nscores.sp1.GLM<-data.frame(Proj_sp1_sp[1:100,\"GLM\",1,])/1000\nscores.sp1.GBM<-data.frame(Proj_sp1_sp[1:100,\"GBM\",1,])/1000\nscores.sp1.RF<-data.frame(Proj_sp1_sp[1:100,\"RF\",1,])/1000\n\nProjection(Proj = occ.sp2[,Xvar],Proj.name=\"sp2\",GLM=T,GBM=T,GAM=F,RF=T,ANN=F,CTA=F,MARS=F,FDA=F,SRE=F)\nload(\"proj.sp2/Proj_sp2_sp\")\nscores.sp2.GLM<-data.frame(Proj_sp2_sp[1:100,\"GLM\",1,])/1000\nscores.sp2.GBM<-data.frame(Proj_sp2_sp[1:100,\"GBM\",1,])/1000\nscores.sp2.RF<-data.frame(Proj_sp2_sp[1:100,\"RF\",1,])/1000\n\n#MaxEnt modeling\noccur <- data[which(data$pa==1),1:2]\njar <- paste(system.file(package=\"dismo\"), \"/java/maxent.jar\", sep='') #check if maxent.jar is located in the right folder\nme <- maxent(rasts, occur, args=c(\"-X\", 20)) # fit maxent model, with 20% reserved for testing\n\nscores.clim12.MAXENT <- data.frame(predict(me, clim12[,Xvar], progress=\"text\"))\nscores.clim1.MAXENT <- data.frame(predict(me, clim1[,Xvar], progress=\"text\"))\nscores.clim2.MAXENT <- data.frame(predict(me, clim2[,Xvar], progress=\"text\"))\nscores.sp1.MAXENT <- data.frame(predict(me, occ.sp1[,Xvar], progress=\"text\"))\nscores.sp2.MAXENT <- data.frame(predict(me, occ.sp2[,Xvar], progress=\"text\"))\n\n############### measures and plot overlap along prediction gradient\n\n#GLM\nz1<- grid.clim(scores.clim12.GLM,scores.clim1.GLM,scores.sp1.GLM,R)\nz2<- grid.clim(scores.clim12.GLM,scores.clim2.GLM,scores.sp2.GLM,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"GLM - EU niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"GLM - NA niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.contrib(t(VarImportance$sp[3,]))\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#GBM\nz1<- grid.clim(scores.clim12.GBM,scores.clim1.GBM,scores.sp1.GBM,R)\nz2<- grid.clim(scores.clim12.GBM,scores.clim2.GBM,scores.sp2.GBM,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"GBM - EU niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"GBM - NA niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.contrib(t(VarImportance$sp[2,]))\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#RF\nz1<- grid.clim(scores.clim12.RF,scores.clim1.RF,scores.sp1.RF,R)\nz2<- grid.clim(scores.clim12.RF,scores.clim2.RF,scores.sp2.RF,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"RF - EU niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"RF - NA niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.contrib(t(VarImportance$sp[4,]))\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n\n#MaxEnt\nz1<- grid.clim(scores.clim12.MAXENT,scores.clim1.MAXENT,scores.sp1.MAXENT,R)\nz2<- grid.clim(scores.clim12.MAXENT,scores.clim2.MAXENT,scores.sp2.MAXENT,R)\na<-niche.equivalency.test(z1,z2,rep=100)# test of niche equivalency and similarity according to Warren et al. 2008\nb<-niche.similarity.test(z1,z2,rep=100)\nb2<-niche.similarity.test(z2,z1,rep=100)\n\n\t\t\t#plot\t\t\t\nx11(); layout(matrix(c(1,1,2,2,1,1,2,2,3,3,4,5,3,3,6,7), 4, 4, byrow = TRUE))\nplot.niche(z1,title=\"Maxent - EU niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot.niche(z2,title=\"Maxent - NA niche\",name.axis1=\"Probability of occurence\",name.axis2=\"PC2\")\nplot(me)\nplot.new(); text(0.5,0.5,paste(\"niche overlap:\",\"\\n\",\"D=\",round(as.numeric(niche.overlap(z1,z2,cor=T)[1]),3)))\nplot.overlap.test(a,\"D\",\"Equivalency\")\nplot.overlap.test(b,\"D\",\"Similarity 2->1\")\nplot.overlap.test(b2,\"D\",\"Similarity 1->2\")\n",
    "created" : 1440621528840.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1605744016",
    "id" : "FBC838E4",
    "lastKnownWriteTime" : 1440621528,
    "path" : "C:/Users/Bruno/AppData/Local/Temp/Temp1_GEB_698_sm_AppendixS1.zip/script.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}